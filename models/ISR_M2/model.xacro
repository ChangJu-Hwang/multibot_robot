<?xml version="1.0"?>
<robot name="ISR_M2"
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="robot_name" default="Robot1"/>

    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.4"/>
    <xacro:property name="base_length" value="0.6"/>
    <xacro:property name="base_height" value="0.25"/>

    <xacro:property name="wheel_radius" value="0.16"/>
    <xacro:property name="wheel_width" value="0.10"/>

    <xacro:property name="wheel_xoff" value="0.2"/>
    <xacro:property name="wheel_ygap" value="0.0"/>
    <xacro:property name="wheel_zoff" value="-0.09"/>

    <xacro:property name="caster_radius" value="0.09"/>
    <xacro:property name="caster_xoff" value="-0.2"/>

    <!-- Define some commonly used intertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}"/>
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <!-- Odom -->
    <link name="odom">
        <xacro:box_inertia m="0" w="0" d="0" h="0"/>
    </link>

    <!-- Robot Footprint -->
    <link name="base_footprint">
        <xacro:box_inertia m="0" w="0" d="0" h="0"/>
    </link>

    <joint name="odom_joint" type="fixed">
        <parent link="odom"/>
        <child link="base_footprint"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>

    <!-- Robot Base -->
    <link name="base_link">
        <visual name="visual">
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </visual>

        <collision name="collision">
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>

        <xacro:box_inertia m="1" w="${base_width}" d="${base_length}" h="${base_height}"/>
    </link>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="${-(wheel_xoff)} 0.0 0.125" rpy="0.0 0.0 0.0"/>
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>1</mu>
                            <mu2>1</mu2>
                            <slip1>0</slip1>
                            <slip2>0</slip2>
                        </ode>
                    </friction>
                    <contact>
                        <ode>
                            <soft_cfm>0</soft_cfm>
                            <soft_erp>0.2</soft_erp>
                            <kp>1e+13</kp>
                            <kd>1</kd>
                            <max_vel>0.01</max_vel>
                            <min_depth>0.01</min_depth>
                        </ode>
                    </contact>
                </surface>
            </collision>

            <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_link"/>
            <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_width/2+wheel_ygap)} ${wheel_zoff}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="left_wheel" x_reflect="1" y_reflect="1" />
    <xacro:wheel prefix="right_wheel" x_reflect="1" y_reflect="-1" />

    <link name="caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </collision>

        <xacro:sphere_inertia m="1" r="${caster_radius}"/>
    </link>

    <joint name="caster_joint" type="continuous">
        <parent link="base_link"/>
        <child link="caster"/>
        <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)+caster_radius-(wheel_radius-wheel_zoff-(base_height/2))}" rpy="0 0 0"/>
    </joint>

    <!-- IMU -->
    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>

        <xacro:box_inertia m="0.1" w="0.05" d="0.05" h="0.05"/>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="${wheel_xoff} 0 ${wheel_zoff}"/>
    </joint>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <ros>
                    <namespace>/demo</namespace>
                    <remapping>~/out:=imu</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <!-- Lidar -->
    <link name="lidar_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="0.125"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.0508" length="0.055"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.0508" length="0.055"/>
            </geometry>
        </visual>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar_link"/>
        <origin xyz="${wheel_xoff} 0 ${base_height/2+0.055/2}" rpy="0 0 0"/>
    </joint>

    <gazebo reference="lidar_link">
        <sensor name="lidar" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>640</samples>
                        <resolution>1.000000</resolution>
                        <min_angle>-2.26889</min_angle>
                        <max_angle>2.26889</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.08</min>
                    <max>10</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>Robot1/lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Diff Drive -->
    <gazebo>
        <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
            <!-- wheels -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>

            <!-- kinematics -->
            <wheel_separation>0.5</wheel_separation>
            <wheel_diameter>0.32</wheel_diameter>

            <!-- limits -->
            <max_wheel_torque>30</max_wheel_torque>
            <max_wheel_acceleration>1.0</max_wheel_acceleration>

            <!-- output -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>false</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>

            <odometry_topic>odom</odometry_topic>
            <odometry_frame>${robot_name}/odom</odometry_frame>
            <robot_base_frame>${robot_name}/base_footprint</robot_base_frame>
        </plugin>
    </gazebo>
</robot>